#!/usr/bin/env ruby

require 'yaml'


def print_usage
  puts ""
  puts "$ aoc run  LANG YEAR DAY INPUT"
  puts "$ aoc test LANG YEAR DAY"
end

def build(lang)
  %x[ ( cd ./#{lang}/bin && ./build ) ].strip
end

def run(lang, year, day, ab, input)
  %x[ ( cd ./#{lang}/bin && ./run #{year} #{day} #{ab} #{input.inspect} ) ].strip
end

def test(lang, year, day, ab)
  yml = YAML.load_file("test/#{year}/#{"%02d" % day}.yml")
  tests = yml.fetch(ab.upcase)

  tests.map {|io|
    i, o = [ io['input'], io['output'] ]

    [ i, %x[ ( cd ./#{lang}/bin && ./test #{year} #{day} #{ab} #{i.inspect} ) ].strip, o ]
  }
  .map.with_index { |(input, output, expected), idx|
    actual, *rest = output.split

    (actual == expected).tap do |pass|
      unless pass
        puts
        puts "FAILED -- DAY#{day}#{ab.upcase}[#{idx}] "
        puts "  INPUT           #{input.inspect}"
        puts "  OUTPUT:EXPECTED #{expected.inspect}"
        puts "  OUTPUT:ACTUAL   #{actual.inspect}"
      end
    end
  }.tap do |results|
    passes = results.reject(&:!).count
    total  = tests.count

    puts "\n#{passes}/#{total}"
  end
end


cmd, *args = ARGV
lang = args.first

if cmd == 'test'
  build(lang)
  test(*args)
elsif cmd == 'run'
  build(lang)
  puts run(*args)
else
  puts %[`aoc` : Unrecognized Command #{cmd.inspect}]
  print_usage
end
